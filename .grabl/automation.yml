build:
  correctness:
    build:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        bazel build //...
    test:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        bazel test //kglib/... --test_output=streamed --spawn_strategy=standalone
    test-end-to-end:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        bazel test //tests/end_to_end/... --test_output=streamed --spawn_strategy=standalone
    test-markdown-link-health:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo apt update && sudo apt install -y npm
        find . -name \*.md | xargs -L1 npx markdown-link-check@3.8.0 -v
    deploy-pip-snapshot:
      filter:
        owner: graknlabs
        branch: development
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        export DEPLOY_PIP_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_PIP_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-pip -- snapshot
    test-deployment-pip:
      filter:
        owner: graknlabs
        branch: development
      dependencies: [deploy-pip-snapshot]
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        bazel run //:grakn-extractor -- dist/grakn-core-all-linux
        nohup ./dist/grakn-core-all-linux/grakn server start
        echo -n "0.0.0-$CIRCLE_SHA1" > VERSION
        sed -i -e "s/KGLIB_VERSION_MARKER/$(cat VERSION)/g" tests/deployment/requirements.txt
        cat tests/deployment/requirements.txt
        pip install -U pip setuptools
        pip install -r tests/deployment/requirements.txt
        ./dist/grakn-core-all-linux/grakn console -k diagnosis -f kglib/utils/grakn/synthetic/examples/diagnosis/schema.gql
        cd tests/deployment/ && python -m unittest kgcn.diagnosis

  execution:
    - build
    - test
    - test-end-to-end
    - test-markdown-link-health
    - deploy-pip-snapshot
    - test-deployment-pip
