
define

example-id sub attribute, datatype long;

family sub entity,
    has example-id,
    plays family-group;

family-membership sub relation,
    relates family-group,
    relates family-member;

person sub entity,
    plays parent,
    plays child,
    plays sibling,
    plays family-member;

parentship sub relation,
    relates parent,
    relates child;

siblingship sub relation,
    relates sibling;

candidate-siblingship sub relation,
    relates sibling;

add-candidate-siblingships sub rule,
when {
    $p1 isa person;
    $p2 isa person;
    $p1 != $p2;
    not{(sibling: $p1, sibling: $p2) isa siblingship;};
}, then {
    (sibling: $p1, sibling: $p2) isa candidate-siblingship;
};

when-people-share-parents-they-are-siblings sub rule,
when {
    $p1 isa person;
    $p2 isa person;
    $p3 isa person;
    (parent: $p1, child: $p2) isa parentship;
    (parent: $p1, child: $p3) isa parentship;
    $p2 != $p3;
}, then {
    (sibling: $p2, sibling: $p3) isa siblingship;
};

when-people-share-siblings-they-are-siblings sub rule,
when {
    $p1 isa person;
    $p2 isa person;
    $p3 isa person;
    (sibling: $p1, sibling: $p2) isa siblingship;
    (sibling: $p2, sibling: $p3) isa siblingship;
    $p1 != $p2;
    $p2 != $p3;
    $p1 != $p3;
}, then {
    (sibling: $p1, sibling: $p3) isa siblingship;
};


# Data

# Case 1
insert
$f isa family, has example-id 0;
$p1 isa person;
$p2 isa person;
$p3 isa person;
(parent: $p1, child: $p2) isa parentship;
(parent: $p1, child: $p3) isa parentship;
(family-member: $p1, family-group: $f) isa family-membership;
(family-member: $p2, family-group: $f) isa family-membership;
(family-member: $p3, family-group: $f) isa family-membership;
